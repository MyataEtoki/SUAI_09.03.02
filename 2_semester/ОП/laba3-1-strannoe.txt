#include <iostream>
#include <vector>;
using namespace std;


void recursion(int numeral, int &depth, vector<int> &numbers) {
    if (numeral < 10) {
        // первая цифра числа
        numbers.push_back(numeral);
        cout << "Recursion's depth: " << depth << "; Numeral = " << numeral << "; In numbers: " << numbers.size() << " numbers!" << endl;
        depth++;
    } else {
        recursion(numeral / 10, depth, numbers); // рекурсивный вызов функции для оставшихся цифр числа
        // вывод последней цифры числа, число с каждым вызовом функции уменьшается
        numbers.push_back(numeral%10);
        cout << "Recursion's depth: " << depth << "; Numeral = " << numeral %10 << "; In numbers: " << numbers.size() << " numbers!" << endl;
        depth++;
    }
}

int main() {
    int numeral;
    int depth = 1;
    vector<int> numbers;
    cout << "Input numeral: ";
    cin >> numeral;

    
    recursion(numeral, depth, numbers);
    cout << "Every number of numeral: {";
    for (int i = 0; i < numbers.size(); i += 1) {
        cout << numbers[i] << ',';
    }
    cout << "\b" << "}";
    cout << endl << "Final recursion's depth = " << depth-1;
    return 0;
}